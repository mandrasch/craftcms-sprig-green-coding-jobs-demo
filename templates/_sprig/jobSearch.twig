{# Set default values, if there is no value set by Sprig (via <input sprig name=...>) #}
{% set searchTerm = searchTerm ?? '' %}
{% set selectedBenefitCategories = selectedBenefitCategories ?? [] %}
{% set selectedProgrammingLanguages = selectedProgrammingLanguages ?? [] %}
{% if reset is defined %}
	{% set searchTerm = '' %}
	{% set selectedBenefitCategories = [] %}
	{% set selectedProgrammingLanguages = [] %}
{% endif %}
{# TODO: Add or / more complicated cases?}

{# Paginate vars https://putyourlightson.com/sprig/cookbook#pagination #}
{# Sets a default value if not defined by `s-val:*` on the clicked element #}
{% set page = page ?? 1 %}


{# Query Building #}
{% set jobQuery = craft.entries.section('jobs').eagerly() %}

{# TODO: do we need to sanitize this? #}

{% if searchTerm != '' %}
	{% do jobQuery.search(searchTerm) %}
{% endif %}
{% if selectedBenefitCategories is not empty %}
	{# element ids as params are just fine for andRelatedTo() #}
	{% do jobQuery.andRelatedTo(selectedBenefitCategories) %}
{% endif %}
{% if selectedProgrammingLanguages is not empty %}
	{% do jobQuery.andRelatedTo(selectedProgrammingLanguages) %}
{% endif %}

{# Paginates the entry query given the current page, https://putyourlightson.com/sprig/cookbook#pagination #}
{% do jobQuery.limit(3) %}
{% set pageInfo = sprig.paginate(jobQuery, page) %}

{# Get results for current page #}
{% set jobs = pageInfo.pageResults %}
{% set jobs = jobQuery.all() %}

{# TODO: how can we add array to it? |url_encode as well? #}
{# selectedBenefitCategories: selectedBenefitCategories|url_encode, #}
{# selectedProgrammingLanguages: selectedProgrammingLanguages|url_encode, #}

{% set filters = {
		      searchTerm: searchTerm,
		      page: page
		  } %}

{# This will take care of URL params (automagically), on page load and after actions / page switch #}
{% do sprig.pushUrl('?' ~ filters|url_encode) %}


	<div class="job-search"> <div class="job-filters">

		<div class="job-filters__filter-section search">
			<h2>Search term</h2>

			<input sprig type="text" name="searchTerm" placeholder="Search term, e.g. 'Svelte'" aria-label="Search term" value="{{ searchTerm }}"/>
			{#{{dump(searchTerm)}}#}

      <p style="font-size:0.9rem;">Examples:  <a href="#" sprig s-val:searchTerm="{{ "Svelte" }}" s-push-url="{{'?' ~ filters|merge({searchTerm: 'Svelte'})|url_encode }}">Svelte</a>, <a href="#" sprig s-val:searchTerm="{{ "PHP" }}" s-push-url="{{'?' ~ filters|merge({searchTerm: 'PHP'})|url_encode }}">PHP</a></p>

		</div>

		{# TODO: Caching possible here? #}
		{# Get all possible values from benefit categories #}
		{% set benefitCategoryOptions = craft.categories.group('jobBenefitCategories').all()%}
		{% set programmingLanguagesOptions = craft.tags().group('jobProgrammingLanguages').all() %}

		<div class="job-filters__filter-section benefit-categories">
			<h2>Benefit Categories (Category)</h2>
			<div class="job-filters__filter-section__options">
				{% for benefitCategoryOption in benefitCategoryOptions %}
					<div>
						<input sprig type="checkbox" id="benefit-categories-{{ benefitCategoryOption.id }}" name="selectedBenefitCategories[]" value="{{ benefitCategoryOption.id }}" {{benefitCategoryOption.id in selectedBenefitCategories ? 'checked' }} s-push/>
						<label for="benefit-categories-{{ benefitCategoryOption.id }}">
							{{ benefitCategoryOption.title }}
						</label>
					</div>
				{% endfor %}
			</div>
		</div>

		{# TODO: Aria live section - a11y #}
		{# TODO: Tag Selection with loading data
																																																																																																																																																																																																											async instead of showing all? #}
		<div class="job-filters__filter-section programming-languages">
			<h2>Programming Languages (Tags)</h2>
			<div class="job-filters__filter-section__options">
				{% for programmingLanguageOption in programmingLanguagesOptions %}
					<div>
						<input sprig type="checkbox" id="{{'programming-languages-'~ programmingLanguageOption.id }}" name="selectedProgrammingLanguages[]" value="{{ programmingLanguageOption.id }}" {{programmingLanguageOption.id in selectedProgrammingLanguages ? 'checked' }}/>
						<label for="programming-languages-{{ programmingLanguageOption.id }}">
							{{ programmingLanguageOption.title }}
						</label>
					</div>
				{% endfor %}
			</div>
		</div>


		<!-- <h2>Price filtering</h2>
																																																																																																																																																																																																											<h2>Dropdown Filtering</h2> -->
	</div>

	<!-- TODO: add aria-live -->
	<p>
		Results:
	</p>

	<div class="job-results">
		{% for job in jobs %}
			<a href="{{ job.url }}" class="job-results__card">
				{% set jobImage = job.image.one() ??? null %}
				{% if jobImage %}
					{% set transforms = craft.imagerx.transformImage(jobImage, 'listThumbnail') %}
					{# https://imager-x.spacecat.ninja/templating.html#twig-filters #}
					<img src="{{ craft.imagerx.placeholder({ width: 16, height: 9 }) }}" sizes="auto" srcset="{{ transforms | srcset }}">
				{% endif %}
				<div class="job-results__card__content">
					<h3>{{ job.title }}</h3>
					{{ job.subline ??? "" }}
				</div>

			</a>
		{% endfor %}
	</div>

	<!-- https://putyourlightson.com/sprig/cookbook#pagination -->

	{% if jobs %}
		{% if page > 1 %}
			{# Decrements `page` by 1 and pushes the new value into the URL on click #}
			<button sprig s-val:page="{{ page - 1 }}" s-push-url="?page={{ page - 1 }}">
				Previous
			</button>
		{% endif %}
		{% if page < pageInfo.totalPages %}
			{# Increments `page` by 1 and pushes the new value into the URL on click #}
			<button sprig s-val:page="{{ page + 1 }}" s-push-url="?page={{ page + 1 }}">
				Next
			</button>
		{% endif %}
		<p>
			<em>
				Showing
				{{ pageInfo.first }}-{{ pageInfo.last }}
				of
				{{ pageInfo.total }}
				entries.
			</em><br>
			<em>Page
				{{ pageInfo.currentPage }}
				of
				{{ pageInfo.totalPages }}
				pages.</em><br>
			{% for i in 1..pageInfo.totalPages %}
				{% if i == page %}
					{{ i }}
				{% else %}
					{# Refreshes the component and pushes the new value into the URL #}
					<a href="#" sprig s-val:page="{{ i }}" s-push-url="?page={{ i }}">{{ i }}</a>
				{% endif %}
			{% endfor %}
		</p>
	{% endif %}
</div>

<details style="margin-top:150px;">
	<summary>Debugging</summary>
	<p>Current query:</p>
	<pre>{{ jobQuery.getRawSql() }}</pre>
</details>
